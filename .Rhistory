legend <- read.table("hapmap3.r2.b36.chr2.legend",as.is=T,header=T);
options(error=recover)
a <- available.packages()
head(rownames(a),3)
install.packages("KernSmooth")
library(KernSmooth)
ackageDescriptin("lme4")
packageDescriptin("lme4")
packageDescription("lme4")
library(help="lme4")
install.packages("KernSmooth")
install.packages("swirl")
load?
?
con = url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode= readLines(con)
library(httr)
library(XML)
url <- "http://biostat.jhsph.edu/~jleek/contact.html"
html <- htmlTreeParse(url, useInternalNodes=T)
xpathSApply(html,"//title",xmlValue)
htmlCode = readlines(url)
readlines()
?readlines
library(httr)
html2=GET(url)
content2 = content(html2, as="text")
parsedHtml = htmlParse(content2, asText=TRUE)
xpathSApply(parsedHtml, "//title",xmlValue)
head(parsedHtml)
length(parsedHtml)
parsedHtml
parsedHtml[[2]]
parsedHtml[[1]]
?xpathSApply
url <- "http://biostat.jhsph.edu/~jleek/contact.html"
html <- htmlTreeParse(url, useInternalNodes=T)
length(html)
nchar(html)
html
xpathSApply(html,"//p",xmlValue)
plain.text <- xpathSApply(html,"//p",xmlValue)
length(plain.text)
plain.text <- xpathSApply(html,"//n",xmlValue)
plain.text
plain.text <- xpathSApply(html,"\n",xmlValue)
plain.text <- xpathSApply(html,"//text()",xmlValue)
length(plain.text)
plain.text[[2]]
nchar(plain.text[[10]])
plain.text <- xpathSApply(html,"//text()"[not(ancestor::script)][not(ancestor::style)][not(ancestor::noscript)][not(ancestor::form)],xmlValue)
install.packages("RCurl")
plain.text <- xpathSApply(html, "//text()[not(ancestor::script)][not(ancestor::style)][not(ancestor::noscript)][not(ancestor::form)]", xmlValue)
nchar(plain.text[[10]])
nchar(plain.text[[20]])
cat(paste(plain.text, collapse = " "))
nchar(plain.text[[20]])
ls()
ls()
con = url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode=readLines(con)
close(con)
htmlCode
htmlCode[10]
nchar(htmlCode[10])
rbind(nchar(htmlCode[10]),nchar(htmlCode[20]),nchar(htmlCode[30]),nchar(htmlCode[100]))
?read.fwf
x <- read.fwf(file=url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"),skip=4,
widths=c(12, 7,4, 9,4, 9,4, 9,4))
head(x)
x[4,]
x[,4]
sum(x[,4])
sum(x[,4]) + sum(x[,9])
x <- read.fwf(file=url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"),skip=1,
widths=c(12, 7,4, 9,4, 9,4, 9,4))
x <- read.fwf(file=url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"),skip=4,
widths=c(12, 7,4, 9,4, 9,4, 9,4))
sum(x[,4]) + sum(x[,9])
x <- read.fwf(file=url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"),skip=1,
widths=c(12, 7,4, 9,4, 9,4, 9,4))
sum(x[,4]) + sum(x[,9])
x <- read.fwf(file=url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"),skip=2,
widths=c(12, 7,4, 9,4, 9,4, 9,4))
sum(x[,4]) + sum(x[,9])
x <- read.fwf(file=url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"),skip=3,
widths=c(12, 7,4, 9,4, 9,4, 9,4))
sum(x[,4]) + sum(x[,9])
x <- read.fwf(file=url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"),skip=4,
widths=c(12, 7,4, 9,4, 9,4, 9,4))
sum(x[,4])
library(swirl)
ls()
rm(list=ls())
swirl()
num_vect <- c(0.5,55,-10,6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My","name","is")
my_char
Type paste(my_char, collapse = " ")
paste(my_char, collapse = " ")
my_name <- c(my_char,"Christine")
my_name
paste(my_name, collapse = " ")
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3,c("X","Y","Z"),collapse = "")
paste(1:3,c("X","Y","Z"),sep = "")
paste(LETTERS, 1:4, sep = "-")
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
c(11,2,NA)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
TRUE = TRUE
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 ==7
6 <7
10 <=10
5!=7
!5==7
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
> 8 || 6 != 8 && 4 > 3.9
8 || 6 != 8 && 4 > 3.9
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6>4)
identical('twins','twins')
xor(5==7, !FALSE)
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints >5
which(ints>7)
any(ints<0)
all(ints>0)
?sample
sample(1:6,4,replace=TRUE)
sample(1:6,4,replace=TRUE)
sample(1:20,10,replace=FALSE)
sample(1:20,10)
LETTERS
sample(LETTERS)
sample(c(0,1),100,replace=TRUE)
sample(c(0,1),100)
flips <- sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
rbinom(c(0,1), size = 100, prob = 0.7)
sample(c(0,1),100,prob=0.7)
rbinom(100,size=1,prob=0.7)
flips2 <- rbinom(100,size=1,prob=0.7)
flips2
sum(flips2)
?rnorm()
?rnorm
rnorm(10)
rnorm(10,mean=100,sd=25)
rpois(5,mean=10)
?rpois
rpois(5,10)
my_pois <- replicate(100, rpois(5, 10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
x <- 1:4
p <- x/sum(x)
x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
rownames(temp) <- c("X", "Prob")
temp
p <- c(.1, .2, .3, .4)
x <- 2 : 5
?var
var(p)
var(x)
p <- c(.1, .2, .3, .4)
x <- 2 : 5
var <- sum(P*x^2) - sum(x*p)^2
var <- sum(p*x^2) - sum(x*p)^2
var
dpos <- 0.75
plusgivenpos <-0.75
minusgivenneg <- 0.52
d <- 0.30
(.75 * .3) / (.75 * .3 + .52 * .7)
setwd("~/Desktop/DSCoursera/DSExData/Project1/ExData_Plotting1")
data <- read.table("exdata-data-household_power_consumption.zip",na.is="?",skip=4000,nrow=4000)
data <- read.table("exdata-data-household_power_consumption.zip",na.string="?",skip=4000,nrow=4000)
data <- read.table("household_power_consumption.txt",na.string="?",skip=4000,nrow=4000)
View(data)
?read.table
data <- read.table("household_power_consumption.txt",sep=";",na.string="?",skip=4000,nrow=4000)
View(data)
data <- read.table("household_power_consumption.txt",sep=";",na.string="?",skip=7000,nrow=4000)
View(data)
data <- read.table("household_power_consumption.txt",sep=";",na.string="?",skip=10000,nrow=1000)
View(data)
data <- read.table("household_power_consumption.txt",sep=";",na.string="?",skip=70000,nrow=1000)
View(data)
data <- read.table("household_power_consumption.txt",sep=";",na.string="?",skip=50000,nrow=1000)
View(data)
data <- read.table("household_power_consumption.txt",sep=";",na.string="?",skip=60000,nrow=1000)
View(data)
data <- read.table("household_power_consumption.txt",sep=";",na.string="?",skip=65000,nrow=1000)
View(data)
data <- read.table("household_power_consumption.txt",sep=";",na.string="?",skip=69000,nrow=1000)
View(data)
data <- read.table("household_power_consumption.txt",sep=";",na.string="?",skip=68000,nrow=1000)
View(data)
data <- read.table("household_power_consumption.txt",sep=";",na.string="?",skip=67000,nrow=1000)
View(data)
data <- read.table("household_power_consumption.txt",sep=";",na.string="?",skip=66000,nrow=1000)
View(data)
data <- read.table("household_power_consumption.txt",sep=";",na.string="?",skip=66637,nrow=1000)
View(data)
data <- read.table("household_power_consumption.txt",sep=";",na.string="?",skip=66636,nrow=1000)
View(data)
data <- read.table("household_power_consumption.txt",sep=";",na.string="?",skip=66637,nrow=20000)
View(data)
View(data[1000:2000,])
View(data[2000:3000,])
data <- read.table("household_power_consumption.txt",sep=";",na.string="?",skip=66637,nrow=2883)
View(data)
View(data[1000:2000,])
View(data[1000:2001,])
View(data[2000:2001,])
data <- read.table("household_power_consumption.txt",sep=";",na.string="?",skip=66637,nrow=3000)
View(data)
View(data[2000:3000,])
data <- read.table("household_power_consumption.txt",sep=";",na.string="?",skip=66637,nrow=2881)
data <- read.table("household_power_consumption.txt",sep=";",na.string="?",skip=66637,nrow=2881,
col.names=c("Date","Time","Global_active_power","Global_reactive_power","Voltage","Global_intensity",
"Sub_metering_1","Sub_metering_2","Sub_metering_3"))
View(data)
summary(data)
data <- read.table("household_power_consumption.txt",sep=";",na.string="?",skip=66637,nrow=2880,
col.names=c("Date","Time","Global_active_power","Global_reactive_power","Voltage","Global_intensity",
"Sub_metering_1","Sub_metering_2","Sub_metering_3"))
summary(data)
View(data)
hist(data$Global_active_power,col="red",xlab="Global Active Power (kilowatts)")
hist(data$Global_active_power,col="red",xlab="Global Active Power (kilowatts)",main="Global Active Power")
png(filename="plot1.png")
hist(data$Global_active_power,col="red",xlab="Global Active Power (kilowatts)",main="Global Active Power")
dev.off()
?strptime
datetime <- strptime(c(data$Date,data$Time),"%d/%m/%y %H:%M:%S")
datetime
View(data)
datetime <- strptime(paste(data$Date,data$Time),"%d/%m/%y %H:%M:%S")
datetime
paste(data$Date,data$Time)
x<- paste(data$Date,data$Time)
strptime(x)
strptime(x,"%d/%m/%y %H:%M:%S")
x
strptime("2/2/2007 23:15:00","%d/%m/%y %H:%M:%S")
strptime("2/2/2007 23:15:00","%T")
strptime("2/2/2007 23:15:00","%t")
strptime("2/2/2007 23:15:00","%d/%m/%y")
?as.Date
?strptime
strptime("20/2/06 11:16:16.683", "%d/%m/%y %H:%M:%OS")
strptime("2/2/2007 23:15:00","%d/%m/%y %H:%M:%S")
class(data$Date)
class(data$Time)
strptime("2/2/2007 23:15:00","%d/%m/%y %H:%M:%S",tx="PDT")
strptime("2/2/2007 23:15:00","%d/%m/%y %H:%M:%S",tz="")
?read.table
colClasses=c("character","character",repmat("numeric",7)))
?rep,at
?repmat
?rep
colClasses=c("character","character",rep("numeric",7)))
?read.table
rep("numeric",7)
data <- read.table("household_power_consumption.txt",sep=";",na.string="?",skip=66637,nrow=2880,
col.names=c("Date","Time","Global_active_power","Global_reactive_power","Voltage","Global_intensity",
"Sub_metering_1","Sub_metering_2","Sub_metering_3"),
colClasses=c("Date","character",rep("numeric",7)))
View(data)
data <- read.table("household_power_consumption.txt",sep=";",na.string="?",skip=66637,nrow=2880,
col.names=c("Date","Time","Global_active_power","Global_reactive_power","Voltage","Global_intensity",
"Sub_metering_1","Sub_metering_2","Sub_metering_3"),
colClasses=c("character","character",rep("numeric",7)))
datetime <- strptime(paste(data$Date,data$Time),"%d/%m/%y %H:%M:%S")
datetime
class(data$Date)
class(data$Time)
strptime(data$Time)
?as.Date
View(data)
strptime(data$Time,"%H:%M:%S")
format(strptime(data$Time,"%H:%M:%S"),"%H:%M:%S")
datetime <- c(as.Date(data$Date, "%d/%m/%y"),format(strptime(data$Time,"%H:%M:%S"),"%H:%M:%S"))
datetime
datetime <- paste(as.Date(data$Date, "%d/%m/%y"),format(strptime(data$Time,"%H:%M:%S"),"%H:%M:%S"))
datetime
datetime <- paste(as.Date(data$Date, "%d/%m/%Y"),format(strptime(data$Time,"%H:%M:%S"),"%H:%M:%S"))
datetime
plot(datetime,Global_active_power)
plot(datetime,data$Global_active_power)
plot(datetime,data$Global_active_power,type="l")
size(datetime)
nrow(datetime)
length(datetime)
plot(weekdays(datetime),data$Global_active_power,type="l")
plot(datetime,data$Global_active_power,type="l")
?plot
plot(data$Global_active_power)
plot(data$Global_active_power,type="l")
plot(datetime,data$Global_active_power,type="l")
plot(data$Global_active_power,type="l")
class(datetime)
plot(strptime(datetime,"%d/%m/%Y %H:%M:%S"),data$Global_active_power,type="l")
as.Date(datetime)
as.Date(data$Date, "%d/%m/%Y") + format(strptime(data$Time,"%H:%M:%S")
)
datetime <- strptime(as.Date(data$Date, "%d/%m/%Y") + format(strptime(data$Time,"%H:%M:%S")), "%d/%m/%Y %H:%M:%S")
datetime <- strptime(as.Date(data$Date, "%d/%m/%Y") + format(strptime(data$Time,"%H:%M:%S")), "%d/%m/%Y %H:%M:%S")
as.Date(data$Date, "%d/%m/%Y")
format(strptime(data$Time,"%H:%M:%S"))
format(strptime(data$Time,"%H:%M:%S"),"%H:%M:%S")
datetime <- strptime(as.Date(data$Date, "%d/%m/%Y") + format(strptime(data$Time,"%H:%M:%S"),"%H:%M:%S"), "%d/%m/%Y %H:%M:%S")
format(strptime(data$Time,"%H:%M:%S"),"%H:%M:%S")
datetime <- strptime(data$Date + format(strptime(data$Time,"%H:%M:%S"),"%H:%M:%S"), "%d/%m/%Y %H:%M:%S")
datetime <- strptime(paste(data$Date + format(strptime(data$Time,"%H:%M:%S"),"%H:%M:%S")), "%d/%m/%Y %H:%M:%S")
strptime(paste(data$Date,data$Time, "%d/%m/%Y %H:%M:%S")
)
strptime(paste(data$Date,data$Time), "%d/%m/%Y %H:%M:%S")
class(strptime(paste(data$Date,data$Time), "%d/%m/%Y %H:%M:%S"))
datetime <- strptime(paste(data$Date,data$Time), "%d/%m/%Y %H:%M:%S")
datetime
plot(datetime,data$Global_active_power,type="l")
plot(datetime,data$Global_active_power,type="l",xlab="",ylab="Global Active Power (kilowatts)")
datetime <- strptime(paste(data$Date,data$Time), "%d/%m/%Y %H:%M:%S")
png(filename="plot2.png")
plot(datetime,data$Global_active_power,type="l",xlab="",ylab="Global Active Power (kilowatts)")
dev.off()
plot(datetime,data$Sub_metering_1,type="l",xlab="",ylab="Global Active Power (kilowatts)")
points(data$Sub_metering_2,type="l")
lines(data$Sub_metering_2,type="l")
lines(datetime,data$Sub_metering_2,type="l")
plot(datetime,data$Sub_metering_1,type="l",xlab="",ylab="Global Active Power (kilowatts)",ylab="Energy sub metering")
plot(datetime,data$Sub_metering_1,type="l",xlab="",ylab="Global Active Power (kilowatts)",main="Energy sub metering")
lines(datetime,data$Sub_metering_2,type="l",col="red")
lines(datetime,data$Sub_metering_3,type="l",col="blue")
?legend
legend("topright", pch = 0, col = c("black","blue", "red"), legend = c("Sub_metering_1", "Sub_metering_2","Sub_metering_3"))
legend("topright", pch = -, col = c("black","blue", "red"), legend = c("Sub_metering_1", "Sub_metering_2","Sub_metering_3"))
plot(datetime,data$Sub_metering_1,type="l",xlab="",ylab="Energy sub metering",main="Energy sub metering")
lines(datetime,data$Sub_metering_2,type="l",col="red")
lines(datetime,data$Sub_metering_3,type="l",col="blue")
legend("topright", pch = 0, lty=1,col = c("black","blue", "red"), legend = c("Sub_metering_1", "Sub_metering_2","Sub_metering_3"))
plot(datetime,data$Sub_metering_1,type="l",xlab="",ylab="Energy sub metering",main="Energy sub metering")
lines(datetime,data$Sub_metering_2,type="l",col="red")
lines(datetime,data$Sub_metering_3,type="l",col="blue")
legend("topright", pch = 0, lty=1,col = c("black","blue", "red"), legend = c("Sub_metering_1", "Sub_metering_2","Sub_metering_3"))
legend("topright", lty=1,col = c("black","blue", "red"), legend = c("Sub_metering_1", "Sub_metering_2","Sub_metering_3"))
datetime <- strptime(paste(data$Date,data$Time), "%d/%m/%Y %H:%M:%S")
png(filename="plot3.png")
plot(datetime,data$Sub_metering_1,type="l",xlab="",ylab="Energy sub metering",main="Energy sub metering")
lines(datetime,data$Sub_metering_2,type="l",col="red")
lines(datetime,data$Sub_metering_3,type="l",col="blue")
legend("topright", lty=1,col = c("black","blue", "red"), legend = c("Sub_metering_1", "Sub_metering_2","Sub_metering_3"))
dev.off()
par(mfrow = c(2, 2))
with(data, { #Multiple base plots
plot(datetime,data$Global_active_power,type="l",xlab="",ylab="Global Active Power (kilowatts)")
plot(datetime,data$Voltage,type="l",xlab="",ylab="datetime")
plot(datetime,data$Sub_metering_1,type="l",xlab="",ylab="Energy sub metering",main="Energy sub metering")
lines(datetime,data$Sub_metering_2,type="l",col="red")
lines(datetime,data$Sub_metering_3,type="l",col="blue")
legend("topright", lty=1,col = c("black","blue", "red"), legend = c("Sub_metering_1", "Sub_metering_2","Sub_metering_3"))
plot(datetime,data$Global_reactive_power,type="l",xlab="datetime",ylab="Global_reactive_power")
})
?legend
plot(datetime,data$Sub_metering_1,type="l",xlab="",ylab="Energy sub metering")
lines(datetime,data$Sub_metering_2,type="l",col="red")
lines(datetime,data$Sub_metering_3,type="l",col="blue")
legend("topright", lty=1,qex=0.3,col = c("black","blue", "red"), legend = c("Sub_metering_1", "Sub_metering_2","Sub_metering_3"))
?topright
?legend
legend("topright", lty=1,cex=0.3,col = c("black","blue", "red"), legend = c("Sub_metering_1", "Sub_metering_2","Sub_metering_3"))
datetime <- strptime(paste(data$Date,data$Time), "%d/%m/%Y %H:%M:%S")
par(mfrow = c(2, 2))
with(data, { #Multiple base plots
plot(datetime,data$Global_active_power,type="l",xlab="",ylab="Global Active Power (kilowatts)")
plot(datetime,data$Voltage,type="l",xlab="",ylab="datetime")
plot(datetime,data$Sub_metering_1,type="l",xlab="",ylab="Energy sub metering")
lines(datetime,data$Sub_metering_2,type="l",col="red")
lines(datetime,data$Sub_metering_3,type="l",col="blue")
legend("topright", lty=1,cex=0.3,col = c("black","blue", "red"), legend = c("Sub_metering_1", "Sub_metering_2","Sub_metering_3"))
plot(datetime,data$Global_reactive_power,type="l",xlab="datetime",ylab="Global_reactive_power")
})
png(filename="plot4.png")
par(mfrow = c(2, 2))
with(data, { #Multiple base plots
plot(datetime,data$Global_active_power,type="l",xlab="",ylab="Global Active Power (kilowatts)")
plot(datetime,data$Voltage,type="l",xlab="",ylab="datetime")
plot(datetime,data$Sub_metering_1,type="l",xlab="",ylab="Energy sub metering")
lines(datetime,data$Sub_metering_2,type="l",col="red")
lines(datetime,data$Sub_metering_3,type="l",col="blue")
legend("topright", lty=1,cex=0.3,col = c("black","blue", "red"), legend = c("Sub_metering_1", "Sub_metering_2","Sub_metering_3"))
plot(datetime,data$Global_reactive_power,type="l",xlab="datetime",ylab="Global_reactive_power")
})
dev.off()
